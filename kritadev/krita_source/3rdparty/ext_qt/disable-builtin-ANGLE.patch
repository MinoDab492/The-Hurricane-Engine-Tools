From 0e0020e1250c1e7ef0704c240778d57317d2fdd9 Mon Sep 17 00:00:00 2001
From: Alvin Wong <alvinhochun@gmail.com>
Date: Mon, 28 Mar 2022 23:45:10 +0800
Subject: [PATCH] Disable Qt's copy of ANGLE and use external build

---
 src/gui/Qt5GuiConfigExtras.cmake.in                  | 12 ++++++------
 src/gui/configure.json                               |  4 ++--
 src/gui/gui.pro                                      |  8 ++++----
 src/plugins/platforms/windows/qwindowseglcontext.cpp |  2 +-
 src/plugins/platforms/winrt/qwinrteglcontext.cpp     |  2 +-
 src/src.pro                                          | 12 ++++++------
 6 files changed, 20 insertions(+), 20 deletions(-)

diff --git a/src/gui/Qt5GuiConfigExtras.cmake.in b/src/gui/Qt5GuiConfigExtras.cmake.in
index 84dbbfebd4..6cb7d554a9 100644
--- a/src/gui/Qt5GuiConfigExtras.cmake.in
+++ b/src/gui/Qt5GuiConfigExtras.cmake.in
@@ -2,16 +2,16 @@
 !!IF !isEmpty(CMAKE_ANGLE_EGL_DLL_RELEASE)
 
 !!IF isEmpty(CMAKE_INCLUDE_DIR_IS_ABSOLUTE)
-set(Qt5Gui_EGL_INCLUDE_DIRS \"${_qt5$${CMAKE_MODULE_NAME}_install_prefix}/$$CMAKE_INCLUDE_DIR/QtANGLE\")
+#set(Qt5Gui_EGL_INCLUDE_DIRS \"${_qt5$${CMAKE_MODULE_NAME}_install_prefix}/$$CMAKE_INCLUDE_DIR/QtANGLE\")
 !!ELSE
-set(Qt5Gui_EGL_INCLUDE_DIRS \"$$CMAKE_INCLUDE_DIR/QtANGLE\")
+#set(Qt5Gui_EGL_INCLUDE_DIRS \"$$CMAKE_INCLUDE_DIR/QtANGLE\")
 !!ENDIF
 
-_qt5_Gui_check_file_exists(${Qt5Gui_EGL_INCLUDE_DIRS})
+#_qt5_Gui_check_file_exists(${Qt5Gui_EGL_INCLUDE_DIRS})
 
-list(APPEND Qt5Gui_INCLUDE_DIRS ${Qt5Gui_EGL_INCLUDE_DIRS})
-set_property(TARGET Qt5::Gui APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${Qt5Gui_EGL_INCLUDE_DIRS})
-set(Qt5Gui_OPENGL_INCLUDE_DIRS ${Qt5Gui_EGL_INCLUDE_DIRS})
+#list(APPEND Qt5Gui_INCLUDE_DIRS ${Qt5Gui_EGL_INCLUDE_DIRS})
+#set_property(TARGET Qt5::Gui APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${Qt5Gui_EGL_INCLUDE_DIRS})
+#set(Qt5Gui_OPENGL_INCLUDE_DIRS ${Qt5Gui_EGL_INCLUDE_DIRS})
 
 macro(_populate_qt5gui_gl_target_properties TargetName Configuration LIB_LOCATION IMPLIB_LOCATION)
     set_property(TARGET Qt5::${TargetName} APPEND PROPERTY IMPORTED_CONFIGURATIONS ${Configuration})
diff --git a/src/gui/configure.json b/src/gui/configure.json
index 6dd6f5b16c..7a54639704 100644
--- a/src/gui/configure.json
+++ b/src/gui/configure.json
@@ -1123,7 +1123,7 @@
         "combined-angle-lib": {
             "label": "Combined ANGLE Library",
             "autoDetect": false,
-            "condition": "features.angle",
+            "condition": "features.angle && !features.angle",
             "output": [ "publicFeature" ]
         },
         "directfb": {
@@ -1895,7 +1895,7 @@ QMAKE_LIBDIR_OPENGL[_ES2] and QMAKE_LIBS_OPENGL[_ES2] in the mkspec for your pla
                         {
                             "type": "feature",
                             "args": "combined-angle-lib",
-                            "condition": "features.angle"
+                            "condition": "features.angle && !features.angle"
                         },
                         "opengl-desktop",
                         {
diff --git a/src/gui/gui.pro b/src/gui/gui.pro
index 06c9cd3939..1b622b12fa 100644
--- a/src/gui/gui.pro
+++ b/src/gui/gui.pro
@@ -19,10 +19,10 @@ MODULE_PLUGIN_TYPES = \
     egldeviceintegrations
 
 # This is here only because the platform plugin is no module, obviously.
-qtConfig(angle) {
-    MODULE_AUX_INCLUDES = \
-        \$\$QT_MODULE_INCLUDE_BASE/QtANGLE
-}
+#qtConfig(angle) {
+#    MODULE_AUX_INCLUDES = \
+#        \$\$QT_MODULE_INCLUDE_BASE/QtANGLE
+#}
 
 # Code coverage with TestCocoon
 # The following is required as extra compilers use $$QMAKE_CXX instead of $(CXX).
diff --git a/src/plugins/platforms/windows/qwindowseglcontext.cpp b/src/plugins/platforms/windows/qwindowseglcontext.cpp
index c69f18006e..4d2ce9fc05 100644
--- a/src/plugins/platforms/windows/qwindowseglcontext.cpp
+++ b/src/plugins/platforms/windows/qwindowseglcontext.cpp
@@ -224,7 +224,7 @@ bool QWindowsEGLStaticContext::initializeAngle(QWindowsOpenGLTester::Renderers p
             { EGL_PLATFORM_ANGLE_TYPE_ANGLE, EGL_PLATFORM_ANGLE_TYPE_D3D11_ANGLE, EGL_NONE },
             { EGL_PLATFORM_ANGLE_TYPE_ANGLE, EGL_PLATFORM_ANGLE_TYPE_D3D9_ANGLE, EGL_NONE },
             { EGL_PLATFORM_ANGLE_TYPE_ANGLE, EGL_PLATFORM_ANGLE_TYPE_D3D11_ANGLE,
-              EGL_PLATFORM_ANGLE_DEVICE_TYPE_ANGLE, EGL_PLATFORM_ANGLE_DEVICE_TYPE_WARP_ANGLE, EGL_NONE }
+              EGL_PLATFORM_ANGLE_DEVICE_TYPE_ANGLE, EGL_PLATFORM_ANGLE_DEVICE_TYPE_D3D_WARP_ANGLE, EGL_NONE }
         };
         const EGLint *attributes = nullptr;
         if (preferredType & QWindowsOpenGLTester::AngleRendererD3d11)
diff --git a/src/plugins/platforms/winrt/qwinrteglcontext.cpp b/src/plugins/platforms/winrt/qwinrteglcontext.cpp
index aa64ac1f99..ee650640c5 100644
--- a/src/plugins/platforms/winrt/qwinrteglcontext.cpp
+++ b/src/plugins/platforms/winrt/qwinrteglcontext.cpp
@@ -105,7 +105,7 @@ void QWinRTEGLContext::initialize()
     HRESULT hr = D3D11CreateDevice(nullptr, D3D_DRIVER_TYPE_HARDWARE, NULL, 0, featureLevels, 1,
                                    D3D11_SDK_VERSION, nullptr, nullptr, nullptr);
     EGLint deviceType = SUCCEEDED(hr) ? EGL_PLATFORM_ANGLE_DEVICE_TYPE_HARDWARE_ANGLE
-                                      : EGL_PLATFORM_ANGLE_DEVICE_TYPE_WARP_ANGLE;
+                                      : EGL_PLATFORM_ANGLE_DEVICE_TYPE_D3D_WARP_ANGLE;
 
     eglBindAPI(EGL_OPENGL_ES_API);
 
diff --git a/src/src.pro b/src/src.pro
index 1c76a2e46f..7bd42392e0 100644
--- a/src/src.pro
+++ b/src/src.pro
@@ -111,8 +111,8 @@ src_3rdparty_freetype.target = sub-3rdparty-freetype
 src_3rdparty_gradle.subdir = $$PWD/3rdparty/gradle
 src_3rdparty_gradle.target = sub-3rdparty-gradle
 
-src_angle.subdir = $$PWD/angle
-src_angle.target = sub-angle
+#src_angle.subdir = $$PWD/angle
+#src_angle.target = sub-angle
 
 src_gui.subdir = $$PWD/gui
 src_gui.target = sub-gui
@@ -199,10 +199,10 @@ qtConfig(gui) {
         SUBDIRS += src_3rdparty_harfbuzzng
         src_gui.depends += src_3rdparty_harfbuzzng
     }
-    qtConfig(angle) {
-        SUBDIRS += src_angle
-        src_gui.depends += src_angle
-    }
+    #qtConfig(angle) {
+    #    SUBDIRS += src_angle
+    #    src_gui.depends += src_angle
+    #}
     qtConfig(png):!qtConfig(system-png) {
         SUBDIRS += src_3rdparty_libpng
         src_3rdparty_freetype.depends += src_3rdparty_libpng
-- 
2.24.1.windows.2

