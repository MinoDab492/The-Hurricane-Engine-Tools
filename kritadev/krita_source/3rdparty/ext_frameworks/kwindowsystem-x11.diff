diff --git a/src/kstartupinfo.cpp b/src/kstartupinfo.cpp
index 6cc7bbb..efc291b 100644
--- a/src/kstartupinfo.cpp
+++ b/src/kstartupinfo.cpp
@@ -492,7 +492,7 @@ bool KStartupInfo::sendStartupX(Display *disp_P, const KStartupInfoId &id_P,
 #ifdef KSTARTUPINFO_ALL_DEBUG
     qCDebug(LOG_KWINDOWSYSTEM) << "sending " << msg;
 #endif
-    return KXMessages::broadcastMessageX(disp_P, NET_STARTUP_MSG, msg);
+    return true; // KXMessages::broadcastMessageX(disp_P, NET_STARTUP_MSG, msg);
 #else
     Q_UNUSED(disp_P)
     Q_UNUSED(data_P)
@@ -567,7 +567,7 @@ bool KStartupInfo::sendChangeX(Display *disp_P, const KStartupInfoId &id_P,
 #ifdef KSTARTUPINFO_ALL_DEBUG
     qCDebug(LOG_KWINDOWSYSTEM) << "sending " << msg;
 #endif
-    return KXMessages::broadcastMessageX(disp_P, NET_STARTUP_MSG, msg);
+    return true; //KXMessages::broadcastMessageX(disp_P, NET_STARTUP_MSG, msg);
 #else
     Q_UNUSED(disp_P)
     Q_UNUSED(data_P)
@@ -619,7 +619,7 @@ bool KStartupInfo::sendFinishX(Display *disp_P, const KStartupInfoId &id_P)
 #ifdef KSTARTUPINFO_ALL_DEBUG
     qCDebug(LOG_KWINDOWSYSTEM) << "sending " << msg;
 #endif
-    return KXMessages::broadcastMessageX(disp_P, NET_STARTUP_MSG, msg);
+    return true; //KXMessages::broadcastMessageX(disp_P, NET_STARTUP_MSG, msg);
 #else
     Q_UNUSED(disp_P)
     return true;
@@ -670,7 +670,7 @@ bool KStartupInfo::sendFinishX(Display *disp_P, const KStartupInfoId &id_P,
 #ifdef KSTARTUPINFO_ALL_DEBUG
     qCDebug(LOG_KWINDOWSYSTEM) << "sending " << msg;
 #endif
-    return KXMessages::broadcastMessageX(disp_P, NET_STARTUP_MSG, msg);
+    return true; //KXMessages::broadcastMessageX(disp_P, NET_STARTUP_MSG, msg);
 #else
     Q_UNUSED(disp_P)
     Q_UNUSED(id_P)
diff --git a/src/platforms/xcb/kwindowsystem.cpp b/src/platforms/xcb/kwindowsystem.cpp
index 7f9d30f..c6ed6f0 100644
--- a/src/platforms/xcb/kwindowsystem.cpp
+++ b/src/platforms/xcb/kwindowsystem.cpp
@@ -236,7 +236,7 @@ bool NETEventFilter::nativeEventFilter(xcb_generic_event_t *ev)
         bool old_showing_desktop = showingDesktop();
         NET::Properties props;
         NET::Properties2 props2;
-        NETRootInfo::event(ev, &props, &props2);
+        // NETRootInfo::event(ev, &props, &props2);
 
         if ((props & CurrentDesktop) && currentDesktop() != old_current_desktop) {
             emit s_q->currentDesktopChanged(currentDesktop());
