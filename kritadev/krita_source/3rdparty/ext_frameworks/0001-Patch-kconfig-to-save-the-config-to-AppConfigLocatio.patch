From c0ae653c7ed4faa0bba846bb83a41b68a6e48fa6 Mon Sep 17 00:00:00 2001
From: Boudewijn Rempt <boud@valdyas.org>
Date: Thu, 12 May 2016 20:15:40 +0200
Subject: [PATCH 1/2] Patch kconfig to save the config to AppConfigLocation

I don't know why anyone would want an application to save its
configuration to GenericConfigLocation, after all, we're an
application, not a system level component. But this seems the
only way to fix kconfig to do the sane thing.
---
 docs/options.md                   |  2 +-
 src/core/kdesktopfile.cpp         | 10 +++++-----
 src/kconf_update/kconf_update.cpp |  6 +++---
 3 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/docs/options.md b/docs/options.md
index 4a6e9bc..caca9f8 100644
--- a/docs/options.md
+++ b/docs/options.md
@@ -93,4 +93,4 @@ They are:
 
 * `$QT_CACHE_HOME` - QStandardPaths::GenericCacheLocation
 * `$QT_CONFIG_HOME` - QStandardPaths::GenericConfigLocation
-* `$QT_DATA_HOME` - QStandardPaths::GenericDataLocation
+* `$QT_DATA_HOME` - QStandardPaths::AppDataLocation
diff --git a/src/core/kdesktopfile.cpp b/src/core/kdesktopfile.cpp
index 18ef852..c9691a0 100644
--- a/src/core/kdesktopfile.cpp
+++ b/src/core/kdesktopfile.cpp
@@ -82,11 +82,11 @@ QString KDesktopFile::locateLocal(const QString &path)
     QString relativePath;
     QChar plus(QLatin1Char('/'));
     // Relative to config? (e.g. for autostart)
-    const QStringList lstGenericConfigLocation = QStandardPaths::standardLocations(QStandardPaths::GenericConfigLocation);
-    for (const QString &dir : lstGenericConfigLocation) {
+    const QStringList lstAppDataLocation = QStandardPaths::standardLocations(QStandardPaths::AppDataLocation);
+    for (const QString &dir : lstAppDataLocation) {
         if (path.startsWith(dir + plus)) {
             relativePath = path.mid(dir.length() + 1);
-            return QStandardPaths::writableLocation(QStandardPaths::GenericConfigLocation) + QLatin1Char('/') + relativePath;
+            return QStandardPaths::writableLocation(QStandardPaths::AppDataLocation) + QLatin1Char('/') + relativePath;
         }
     }
     // Relative to xdg data dir? (much more common)
@@ -137,8 +137,8 @@ bool KDesktopFile::isAuthorizedDesktopFile(const QString &path)
         }
     }
     const QString servicesDir = QStringLiteral("kservices5/"); // KGlobal::dirs()->xdgDataRelativePath("services")
-    const QStringList lstGenericDataLocation = QStandardPaths::standardLocations(QStandardPaths::GenericDataLocation);
-    for (const QString &xdgDataPrefix : lstGenericDataLocation) {
+    const QStringList lstAppDataLocation = QStandardPaths::standardLocations(QStandardPaths::AppDataLocation);
+    for (const QString &xdgDataPrefix : lstAppDataLocation) {
         if (QDir(xdgDataPrefix).exists()) {
             const QString prefix = QFileInfo(xdgDataPrefix).canonicalFilePath();
             if (realPath.startsWith(prefix + QLatin1Char('/') + servicesDir, sensitivity)) {
diff --git a/src/kconf_update/kconf_update.cpp b/src/kconf_update/kconf_update.cpp
index 2c48fa3..580d89c 100644
--- a/src/kconf_update/kconf_update.cpp
+++ b/src/kconf_update/kconf_update.cpp
@@ -145,7 +145,7 @@ KonfUpdate::KonfUpdate(QCommandLineParser *parser)
     m_bUseConfigInfo = false;
     if (parser->isSet(QStringLiteral("check"))) {
         m_bUseConfigInfo = true;
-        const QString file = QStandardPaths::locate(QStandardPaths::GenericDataLocation, "kconf_update/" + parser->value(QStringLiteral("check")));
+        const QString file = QStandardPaths::locate(QStandardPaths::AppDataLocation, "kconf_update/" + parser->value(QStringLiteral("check")));
         if (file.isEmpty()) {
             qWarning("File '%s' not found.", parser->value(QStringLiteral("check")).toLocal8Bit().data());
             qCDebug(KCONF_UPDATE_LOG) << "File" << parser->value(QStringLiteral("check")) << "passed on command line not found";
@@ -190,7 +190,7 @@ QStringList KonfUpdate::findUpdateFiles(bool dirtyOnly)
 {
     QStringList result;
 
-    const QStringList dirs = QStandardPaths::locateAll(QStandardPaths::GenericDataLocation, QStringLiteral("kconf_update"), QStandardPaths::LocateDirectory);
+    const QStringList dirs = QStandardPaths::locateAll(QStandardPaths::AppDataLocation, QStringLiteral("kconf_update"), QStandardPaths::LocateDirectory);
     for (const QString &d : dirs) {
         const QDir dir(d);
 
@@ -754,7 +754,7 @@ void KonfUpdate::gotScript(const QString &_script)
         return;
     }
 
-    QString path = QStandardPaths::locate(QStandardPaths::GenericDataLocation, QLatin1String("kconf_update/") + script);
+    QString path = QStandardPaths::locate(QStandardPaths::AppDataLocation, QStringLiteral("kconf_update/") + script);
     if (path.isEmpty()) {
         if (interpreter.isEmpty()) {
             path = CMAKE_INSTALL_PREFIX "/" LIB_INSTALL_DIR "/kconf_update_bin/" + script;
-- 
2.30.1.windows.1

