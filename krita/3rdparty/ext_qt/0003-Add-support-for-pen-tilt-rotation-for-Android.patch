From d9e72f135cdcc9cd2e7d366cf88149daeac4e606 Mon Sep 17 00:00:00 2001
From: Max Thomas <mtinc2@gmail.com>
Date: Wed, 8 Jan 2020 10:34:10 -0700
Subject: [PATCH 03/46] Add support for pen tilt/rotation for Android

Change-Id: I195c891b47841ac86048dc38ea95beaeced8b70a
---
 .../jar/src/org/qtproject/qt5/android/QtNative.java      | 9 +++++++--
 src/plugins/platforms/android/androidjniinput.cpp        | 6 +++---
 2 files changed, 10 insertions(+), 5 deletions(-)

diff --git a/src/android/jar/src/org/qtproject/qt5/android/QtNative.java b/src/android/jar/src/org/qtproject/qt5/android/QtNative.java
index 6d4ef654d3..7b28fdb407 100644
--- a/src/android/jar/src/org/qtproject/qt5/android/QtNative.java
+++ b/src/android/jar/src/org/qtproject/qt5/android/QtNative.java
@@ -490,8 +490,13 @@ public class QtNative
         if (event.getToolType(0) == MotionEvent.TOOL_TYPE_MOUSE) {
             sendMouseEvent(event, id);
         } else if (m_tabletEventSupported && pointerType != 0) {
+            float tiltRot = event.getAxisValue(MotionEvent.AXIS_TILT);
+            float orientation = event.getAxisValue(MotionEvent.AXIS_ORIENTATION);
+            float tiltX = (float) Math.toDegrees(-Math.sin(orientation) * tiltRot);
+            float tiltY = (float) Math.toDegrees(Math.cos(orientation) * tiltRot);
             tabletEvent(id, event.getDeviceId(), event.getEventTime(), event.getAction(), pointerType,
-                event.getButtonState(), event.getX(), event.getY(), event.getPressure());
+                event.getButtonState(), event.getX(), event.getY(), event.getPressure(), tiltX, tiltY,
+                (float) Math.toDegrees(orientation));
         } else {
             touchBegin(id);
             for (int i = 0; i < event.getPointerCount(); ++i) {
@@ -1045,7 +1050,7 @@ public class QtNative
 
     // tablet methods
     public static native boolean isTabletEventSupported();
-    public static native void tabletEvent(int winId, int deviceId, long time, int action, int pointerType, int buttonState, float x, float y, float pressure);
+    public static native void tabletEvent(int winId, int deviceId, long time, int action, int pointerType, int buttonState, float x, float y, float pressure, float tiltX, float tiltY, float rotation);
     // tablet methods
 
     // keyboard methods
diff --git a/src/plugins/platforms/android/androidjniinput.cpp b/src/plugins/platforms/android/androidjniinput.cpp
index a5bd1a58d1..0e74468266 100644
--- a/src/plugins/platforms/android/androidjniinput.cpp
+++ b/src/plugins/platforms/android/androidjniinput.cpp
@@ -323,7 +323,7 @@ namespace QtAndroidInput
     }
 
     static void tabletEvent(JNIEnv */*env*/, jobject /*thiz*/, jint /*winId*/, jint deviceId, jlong time, jint action,
-        jint pointerType, jint buttonState, jfloat x, jfloat y, jfloat pressure)
+        jint pointerType, jint buttonState, jfloat x, jfloat y, jfloat pressure, jfloat tiltX, jfloat tiltY, jfloat rotation)
     {
 #if QT_CONFIG(tabletevent)
         QPointF globalPosF(x, y);
@@ -371,7 +371,7 @@ namespace QtAndroidInput
 
         QWindowSystemInterface::handleTabletEvent(tlw, ulong(time),
             localPos, globalPosF, QTabletEvent::Stylus, pointerType,
-            buttons, pressure, 0, 0, 0., 0., 0, deviceId, Qt::NoModifier);
+            buttons, pressure, tiltX, tiltY, 0., rotation, 0, deviceId, Qt::NoModifier);
 #endif // QT_CONFIG(tabletevent)
     }
 
@@ -876,7 +876,7 @@ namespace QtAndroidInput
         {"mouseWheel", "(IIIFF)V", (void *)mouseWheel},
         {"longPress", "(III)V", (void *)longPress},
         {"isTabletEventSupported", "()Z", (void *)isTabletEventSupported},
-        {"tabletEvent", "(IIJIIIFFF)V", (void *)tabletEvent},
+        {"tabletEvent", "(IIJIIIFFFFFF)V", (void *)tabletEvent},
         {"keyDown", "(IIIZ)V", (void *)keyDown},
         {"keyUp", "(IIIZ)V", (void *)keyUp},
         {"keyboardVisibilityChanged", "(Z)V", (void *)keyboardVisibilityChanged},
-- 
2.33.0

